// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtoMsg {

  /// <summary>Holder for reflection information generated from Message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for Message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1NZXNzYWdlLnByb3RvEghQcm90b01zZyIuCgxMb2dpblJlcXVlc3QSDAoE",
            "bmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSIfCg1Mb2dpblJlc3BvbnNl",
            "Eg4KBnJlc3VsdBgBIAEoByIdCg1Mb2dvdXRSZXF1ZXN0EgwKBG5hbWUYASAB",
            "KAkiIAoOTG9nb3V0UmVzcG9uc2USDgoGcmVzdWx0GAEgASgHIlAKEFJlZ2lz",
            "dGVyUmVzcXVlc3QSDAoEbmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIN",
            "CgVlbWFpbBgDIAEoCRINCgVwaG9uZRgEIAEoCSIiChBSZWdpc3RlclJlc3Bv",
            "bnNlEg4KBnJlc3VsdBgBIAEoByIVChNNZXNzYWdlTm9maWZpY2F0aW9uIhUK",
            "E1dlbGNvbWVOb3RpZmljYXRpb24iGgoLRWNob1JlcXVlc3QSCwoDbXNnGAEg",
            "ASgJIiYKF090aGVyQ2xpZW50Tm90aWZpY2F0aW9uEgsKA21zZxgBIAEoCSKB",
            "AQoSQ3ViZU9wZXJhdGVSZXF1ZXN0EhAKCG1vdmVtZW50GAEgASgCEgwKBHR1",
            "cm4YAiABKAISCgoCaWQYAyABKAcSCQoBeBgEIAEoAhIJCgF5GAUgASgCEgkK",
            "AXoYBiABKAISDwoHdXNlcl9pZBgHIAEoBxINCgVhbmdsZRgIIAEoAiKCAQoT",
            "Q3ViZU9wZXJhdGVSZXNwb25zZRIQCghtb3ZlbWVudBgBIAEoAhIMCgR0dXJu",
            "GAIgASgCEgoKAmlkGAMgASgHEgkKAXgYBCABKAISCQoBeRgFIAEoAhIJCgF6",
            "GAYgASgCEg8KB3VzZXJfaWQYByABKAcSDQoFYW5nbGUYCCABKAIiYQoSQ3Vi",
            "ZUNyZWF0ZVJlc3BvbnNlEgkKAXgYASABKAISCQoBeRgCIAEoAhIJCgF6GAMg",
            "ASgCEg8KB3VzZXJfaWQYBCABKAcSCgoCaWQYBSABKAcSDQoFYW5nbGUYBiAB",
            "KAIiMQoSQ3ViZURlbGV0ZVJlc3BvbnNlEgoKAmlkGAEgASgHEg8KB3VzZXJf",
            "aWQYAiABKAciKAoaU2NlbmVDaGFuZ2VDb21wbGV0ZVJlcXVlc3QSCgoCaWQY",
            "ASABKAciKQobU2NlbmVDaGFuZ2VDb21wbGV0ZVJlc3BvbnNlEgoKAmlkGAEg",
            "ASgHIh8KEU1hdGNoQmVnaW5SZXF1ZXN0EgoKAmlkGAEgASgHIiAKEk1hdGNo",
            "QmVnaW5SZXNwb25zZRIKCgJpZBgBIAEoByIgChJNYXRjaENhbmNlbFJlcXVl",
            "c3QSCgoCaWQYASABKAciIQoTTWF0Y2hDYW5jZWxSZXNwb25zZRIKCgJpZBgB",
            "IAEoByJNChRNYXRjaENvbXBsZXRlUmVxdWVzdBIKCgJpZBgBIAEoBxIVCg1v",
            "dGhlcl91c2VyX2lkGAIgASgHEhIKCnVzZXJfY291bnQYAyABKAciTgoVTWF0",
            "Y2hDb21wbGV0ZVJlc3BvbnNlEgoKAmlkGAEgASgHEhUKDW90aGVyX3VzZXJf",
            "aWQYAiABKAcSEgoKdXNlcl9jb3VudBgDIAEoByKNAQoTUGxhbmVPcGVyYXRl",
            "UmVxdWVzdBISCgpob3Jpem9udGFsGAEgASgCEhAKCHZlcnRpY2FsGAIgASgC",
            "EgwKBGZpcmUYAyABKAcSDwoHdXNlcl9pZBgEIAEoBxIQCghpbmRleF9pZBgF",
            "IAEoBxIJCgF4GAYgASgCEgkKAXkYByABKAISCQoBehgIIAEoAiKOAQoUUGxh",
            "bmVPcGVyYXRlUmVzcG9uc2USEgoKaG9yaXpvbnRhbBgBIAEoAhIQCgh2ZXJ0",
            "aWNhbBgCIAEoAhIMCgRmaXJlGAMgASgHEg8KB3VzZXJfaWQYBCABKAcSEAoI",
            "aW5kZXhfaWQYBSABKAcSCQoBeBgGIAEoAhIJCgF5GAcgASgCEgkKAXoYCCAB",
            "KAIiUgoSV2F2ZUNyZWF0ZVJlc3BvbnNlEgkKAXgYASABKAISCQoBeRgCIAEo",
            "AhIJCgF6GAMgASgCEg0KBWFuZ2VsGAQgASgCEgwKBHR5cGUYBSABKAciEgoQ",
            "RXhpdFNjZW5lUmVxdWVzdCITChFFeGl0U2NlbmVSZXNwb25zZSIRCg9UaW1l",
            "U3luY1JlcXVlc3QiEgoQVGltZVN5bmNSZXNwb25zZSInChNQbGFuZURlc3Ry",
            "b3lSZXF1ZXN0EhAKCGluZGV4X2lkGAEgASgHIigKFFBsYW5lRGVzdHJveVJl",
            "c3BvbnNlEhAKCGluZGV4X2lkGAEgASgHIo0FCgdSZXF1ZXN0EiUKBWxvZ2lu",
            "GAEgASgLMhYuUHJvdG9Nc2cuTG9naW5SZXF1ZXN0EicKBmxvZ291dBgCIAEo",
            "CzIXLlByb3RvTXNnLkxvZ291dFJlcXVlc3QSLAoIcmVnaXN0ZXIYAyABKAsy",
            "Gi5Qcm90b01zZy5SZWdpc3RlclJlc3F1ZXN0EiMKBGVjaG8YBCABKAsyFS5Q",
            "cm90b01zZy5FY2hvUmVxdWVzdBIyCgxjdWJlX29wZXJhdGUYBSABKAsyHC5Q",
            "cm90b01zZy5DdWJlT3BlcmF0ZVJlcXVlc3QSQwoVc2NlbmVfY2hhbmdlX2Nv",
            "bXBsZXRlGAYgASgLMiQuUHJvdG9Nc2cuU2NlbmVDaGFuZ2VDb21wbGV0ZVJl",
            "cXVlc3QSMAoLbWF0Y2hfYmVnaW4YByABKAsyGy5Qcm90b01zZy5NYXRjaEJl",
            "Z2luUmVxdWVzdBI2Cg5tYXRjaF9jb21wbGV0ZRgIIAEoCzIeLlByb3RvTXNn",
            "Lk1hdGNoQ29tcGxldGVSZXF1ZXN0EjIKDG1hdGNoX2NhbmNlbBgJIAEoCzIc",
            "LlByb3RvTXNnLk1hdGNoQ2FuY2VsUmVxdWVzdBI0Cg1wbGFuZV9vcGVyYXRl",
            "GAogASgLMh0uUHJvdG9Nc2cuUGxhbmVPcGVyYXRlUmVxdWVzdBIuCgpleGl0",
            "X3NjZW5lGAsgASgLMhouUHJvdG9Nc2cuRXhpdFNjZW5lUmVxdWVzdBIsCgl0",
            "aW1lX3N5bmMYDCABKAsyGS5Qcm90b01zZy5UaW1lU3luY1JlcXVlc3QSNAoN",
            "cGxhbmVfZGVzdHJveRgNIAEoCzIdLlByb3RvTXNnLlBsYW5lRGVzdHJveVJl",
            "cXVlc3QinwYKCFJlc3BvbnNlEiYKBWxvZ2luGAEgASgLMhcuUHJvdG9Nc2cu",
            "TG9naW5SZXNwb25zZRIoCgZsb2dvdXQYAiABKAsyGC5Qcm90b01zZy5Mb2dv",
            "dXRSZXNwb25zZRIsCghyZWdpc3RlchgDIAEoCzIaLlByb3RvTXNnLlJlZ2lz",
            "dGVyUmVzcG9uc2USMwoMY3ViZV9vcGVyYXRlGAQgASgLMh0uUHJvdG9Nc2cu",
            "Q3ViZU9wZXJhdGVSZXNwb25zZRJEChVzY2VuZV9jaGFuZ2VfY29tcGxldGUY",
            "BSABKAsyJS5Qcm90b01zZy5TY2VuZUNoYW5nZUNvbXBsZXRlUmVzcG9uc2US",
            "OgoUY3ViZV9jcmVhdGVfcmVzcG9uc2UYBiABKAsyHC5Qcm90b01zZy5DdWJl",
            "Q3JlYXRlUmVzcG9uc2USOgoUY3ViZV9kZWxldGVfUmVzcG9uc2UYByABKAsy",
            "HC5Qcm90b01zZy5DdWJlRGVsZXRlUmVzcG9uc2USMQoLbWF0Y2hfYmVnaW4Y",
            "CCABKAsyHC5Qcm90b01zZy5NYXRjaEJlZ2luUmVzcG9uc2USNwoObWF0Y2hf",
            "Y29tcGxldGUYCSABKAsyHy5Qcm90b01zZy5NYXRjaENvbXBsZXRlUmVzcG9u",
            "c2USMwoMbWF0Y2hfY2FuY2VsGAogASgLMh0uUHJvdG9Nc2cuTWF0Y2hDYW5j",
            "ZWxSZXNwb25zZRI1Cg1wbGFuZV9vcGVyYXRlGAsgASgLMh4uUHJvdG9Nc2cu",
            "UGxhbmVPcGVyYXRlUmVzcG9uc2USMQoLd2F2ZV9jcmVhdGUYDCABKAsyHC5Q",
            "cm90b01zZy5XYXZlQ3JlYXRlUmVzcG9uc2USLwoKZXhpdF9zY2VuZRgNIAEo",
            "CzIbLlByb3RvTXNnLkV4aXRTY2VuZVJlc3BvbnNlEi0KCXRpbWVfc3luYxgO",
            "IAEoCzIaLlByb3RvTXNnLlRpbWVTeW5jUmVzcG9uc2USNQoNcGxhbmVfZGVz",
            "dHJveRgPIAEoCzIeLlByb3RvTXNnLlBsYW5lRGVzdHJveVJlc3BvbnNlIqcB",
            "CgxOb3RpZmljYXRpb24SLgoHbWVzc2FnZRgBIAEoCzIdLlByb3RvTXNnLk1l",
            "c3NhZ2VOb2ZpZmljYXRpb24SLgoHd2VsY29tZRgCIAEoCzIdLlByb3RvTXNn",
            "LldlbGNvbWVOb3RpZmljYXRpb24SNwoMb3RoZXJfY2xpZW50GAMgASgLMiEu",
            "UHJvdG9Nc2cuT3RoZXJDbGllbnROb3RpZmljYXRpb24iCQoHQ29tbWFuZCLu",
            "AQoHTWVzc2FnZRIfCghtc2dfdHlwZRgBIAEoDjINLlByb3RvTXNnLk1TRxIO",
            "CgZ1c2VyaWQYAiABKAcSEAoIc2VxdWVuY2UYAyABKAcSEgoKc2Vzc2lvbl9p",
            "ZBgEIAEoBxIUCgx0aW1lc3RhbXBfbXMYBSABKAMSIgoHcmVxdWVzdBgGIAEo",
            "CzIRLlByb3RvTXNnLlJlcXVlc3QSJAoIcmVzcG9uc2UYByABKAsyEi5Qcm90",
            "b01zZy5SZXNwb25zZRIsCgxub3RpZmljYXRpb24YCCABKAsyFi5Qcm90b01z",
            "Zy5Ob3RpZmljYXRpb24qkAcKA01TRxIKCgZVbmtub3cQABIRCg1Mb2dpbl9S",
            "ZXF1ZXN0EAESEgoOTG9naW5fUmVzcG9uc2UQAhISCg5Mb2dvdXRfUmVxdWVz",
            "dBADEhMKD0xvZ291dF9SZXNwb25zZRAEEhQKEFJlZ2lzdGVyX1JlcXVlc3QQ",
            "BRIVChFSZWdpc3Rlcl9SZXNwb25zZRAGEhUKEUtlZXBhbGl2ZV9SZXF1ZXN0",
            "EAcSFgoSS2VlcGFsaXZlX1Jlc3BvbnNlEAgSGAoUU2VuZF9NZXNzYWdlX1Jl",
            "cXVlc3QQCRIZChVTZW5kX01lc3NhZ2VfUmVzcG9uc2UQChIYChRNZXNzYWdl",
            "X05vZmlmaWNhdGlvbhALEhgKFFdlbGNvbWVfTm90aWZpY2F0aW9uEAwSEAoM",
            "RWNob19SZXF1ZXN0EA0SHQoZT3RoZXJfQ2xpZW50X05vdGlmaWNhdGlvbhAO",
            "EhgKFEN1YmVfT3BlcmF0ZV9SZXF1ZXN0EA8SGQoVQ3ViZV9PcGVyYXRlX1Jl",
            "c3BvbnNlEBASIQodU2NlbmVfQ2hhbmdlX0NvbXBsZXRlX1JlcXVlc3QQERIi",
            "Ch5TY2VuZV9DaGFuZ2VfQ29tcGxldGVfUmVzcG9uc2UQEhIYChRDdWJlX0Ny",
            "ZWF0ZV9SZXNwb25zZRATEhgKFEN1YmVfRGVsZXRlX1Jlc3BvbnNlEBQSFwoT",
            "TWF0Y2hfQmVnaW5fUmVxdWVzdBAVEhgKFE1hdGNoX0JlZ2luX1Jlc3BvbnNl",
            "EBYSGgoWTWF0Y2hfQ29tcGxldGVfUmVxdWVzdBAXEhsKF01hdGNoX0NvbXBs",
            "ZXRlX1Jlc3BvbnNlEBgSGAoUTWF0Y2hfQ2FuY2VsX1JlcXVlc3QQGRIZChVN",
            "YXRjaF9DYW5jZWxfUmVzcG9uc2UQGhIZChVQbGFuZV9PcGVyYXRlX1JlcXVl",
            "c3QQGxIaChZQbGFuZV9PcGVyYXRlX1Jlc3BvbnNlEBwSGAoUV2F2ZV9DcmVh",
            "dGVfUmVzcG9uc2UQHRIWChJFeGl0X1NjZW5lX1JlcXVlc3QQHhIXChNFeGl0",
            "X1NjZW5lX1Jlc3BvbnNlEB8SFQoRVGltZV9TeW5jX1JlcXVlc3QQIBIWChJU",
            "aW1lX1N5bmNfUmVzcG9uc2UQIRIZChVQbGFuZV9EZXN0cm95X1JlcXVlc3QQ",
            "IhIaChZQbGFuZV9EZXN0cm95X1Jlc3BvbnNlECNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ProtoMsg.MSG), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.LoginRequest), global::ProtoMsg.LoginRequest.Parser, new[]{ "Name", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.LoginResponse), global::ProtoMsg.LoginResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.LogoutRequest), global::ProtoMsg.LogoutRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.LogoutResponse), global::ProtoMsg.LogoutResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.RegisterResquest), global::ProtoMsg.RegisterResquest.Parser, new[]{ "Name", "Password", "Email", "Phone" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.RegisterResponse), global::ProtoMsg.RegisterResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.MessageNofification), global::ProtoMsg.MessageNofification.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.WelcomeNotification), global::ProtoMsg.WelcomeNotification.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.EchoRequest), global::ProtoMsg.EchoRequest.Parser, new[]{ "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.OtherClientNotification), global::ProtoMsg.OtherClientNotification.Parser, new[]{ "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.CubeOperateRequest), global::ProtoMsg.CubeOperateRequest.Parser, new[]{ "Movement", "Turn", "Id", "X", "Y", "Z", "UserId", "Angle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.CubeOperateResponse), global::ProtoMsg.CubeOperateResponse.Parser, new[]{ "Movement", "Turn", "Id", "X", "Y", "Z", "UserId", "Angle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.CubeCreateResponse), global::ProtoMsg.CubeCreateResponse.Parser, new[]{ "X", "Y", "Z", "UserId", "Id", "Angle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.CubeDeleteResponse), global::ProtoMsg.CubeDeleteResponse.Parser, new[]{ "Id", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.SceneChangeCompleteRequest), global::ProtoMsg.SceneChangeCompleteRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.SceneChangeCompleteResponse), global::ProtoMsg.SceneChangeCompleteResponse.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.MatchBeginRequest), global::ProtoMsg.MatchBeginRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.MatchBeginResponse), global::ProtoMsg.MatchBeginResponse.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.MatchCancelRequest), global::ProtoMsg.MatchCancelRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.MatchCancelResponse), global::ProtoMsg.MatchCancelResponse.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.MatchCompleteRequest), global::ProtoMsg.MatchCompleteRequest.Parser, new[]{ "Id", "OtherUserId", "UserCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.MatchCompleteResponse), global::ProtoMsg.MatchCompleteResponse.Parser, new[]{ "Id", "OtherUserId", "UserCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.PlaneOperateRequest), global::ProtoMsg.PlaneOperateRequest.Parser, new[]{ "Horizontal", "Vertical", "Fire", "UserId", "IndexId", "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.PlaneOperateResponse), global::ProtoMsg.PlaneOperateResponse.Parser, new[]{ "Horizontal", "Vertical", "Fire", "UserId", "IndexId", "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.WaveCreateResponse), global::ProtoMsg.WaveCreateResponse.Parser, new[]{ "X", "Y", "Z", "Angel", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.ExitSceneRequest), global::ProtoMsg.ExitSceneRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.ExitSceneResponse), global::ProtoMsg.ExitSceneResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.TimeSyncRequest), global::ProtoMsg.TimeSyncRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.TimeSyncResponse), global::ProtoMsg.TimeSyncResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.PlaneDestroyRequest), global::ProtoMsg.PlaneDestroyRequest.Parser, new[]{ "IndexId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.PlaneDestroyResponse), global::ProtoMsg.PlaneDestroyResponse.Parser, new[]{ "IndexId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.Request), global::ProtoMsg.Request.Parser, new[]{ "Login", "Logout", "Register", "Echo", "CubeOperate", "SceneChangeComplete", "MatchBegin", "MatchComplete", "MatchCancel", "PlaneOperate", "ExitScene", "TimeSync", "PlaneDestroy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.Response), global::ProtoMsg.Response.Parser, new[]{ "Login", "Logout", "Register", "CubeOperate", "SceneChangeComplete", "CubeCreateResponse", "CubeDeleteResponse", "MatchBegin", "MatchComplete", "MatchCancel", "PlaneOperate", "WaveCreate", "ExitScene", "TimeSync", "PlaneDestroy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.Notification), global::ProtoMsg.Notification.Parser, new[]{ "Message", "Welcome", "OtherClient" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.Command), global::ProtoMsg.Command.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.Message), global::ProtoMsg.Message.Parser, new[]{ "MsgType", "Userid", "Sequence", "SessionId", "TimestampMs", "Request", "Response", "Notification" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MSG {
    [pbr::OriginalName("Unknow")] Unknow = 0,
    /// <summary>
    /// login
    /// </summary>
    [pbr::OriginalName("Login_Request")] LoginRequest = 1,
    [pbr::OriginalName("Login_Response")] LoginResponse = 2,
    /// <summary>
    /// logout
    /// </summary>
    [pbr::OriginalName("Logout_Request")] LogoutRequest = 3,
    [pbr::OriginalName("Logout_Response")] LogoutResponse = 4,
    /// <summary>
    /// register
    /// </summary>
    [pbr::OriginalName("Register_Request")] RegisterRequest = 5,
    [pbr::OriginalName("Register_Response")] RegisterResponse = 6,
    /// <summary>
    /// keepalive
    /// </summary>
    [pbr::OriginalName("Keepalive_Request")] KeepaliveRequest = 7,
    [pbr::OriginalName("Keepalive_Response")] KeepaliveResponse = 8,
    [pbr::OriginalName("Send_Message_Request")] SendMessageRequest = 9,
    [pbr::OriginalName("Send_Message_Response")] SendMessageResponse = 10,
    [pbr::OriginalName("Message_Nofification")] MessageNofification = 11,
    [pbr::OriginalName("Welcome_Notification")] WelcomeNotification = 12,
    [pbr::OriginalName("Echo_Request")] EchoRequest = 13,
    [pbr::OriginalName("Other_Client_Notification")] OtherClientNotification = 14,
    [pbr::OriginalName("Cube_Operate_Request")] CubeOperateRequest = 15,
    [pbr::OriginalName("Cube_Operate_Response")] CubeOperateResponse = 16,
    [pbr::OriginalName("Scene_Change_Complete_Request")] SceneChangeCompleteRequest = 17,
    [pbr::OriginalName("Scene_Change_Complete_Response")] SceneChangeCompleteResponse = 18,
    [pbr::OriginalName("Cube_Create_Response")] CubeCreateResponse = 19,
    [pbr::OriginalName("Cube_Delete_Response")] CubeDeleteResponse = 20,
    [pbr::OriginalName("Match_Begin_Request")] MatchBeginRequest = 21,
    [pbr::OriginalName("Match_Begin_Response")] MatchBeginResponse = 22,
    [pbr::OriginalName("Match_Complete_Request")] MatchCompleteRequest = 23,
    [pbr::OriginalName("Match_Complete_Response")] MatchCompleteResponse = 24,
    [pbr::OriginalName("Match_Cancel_Request")] MatchCancelRequest = 25,
    [pbr::OriginalName("Match_Cancel_Response")] MatchCancelResponse = 26,
    [pbr::OriginalName("Plane_Operate_Request")] PlaneOperateRequest = 27,
    [pbr::OriginalName("Plane_Operate_Response")] PlaneOperateResponse = 28,
    [pbr::OriginalName("Wave_Create_Response")] WaveCreateResponse = 29,
    [pbr::OriginalName("Exit_Scene_Request")] ExitSceneRequest = 30,
    [pbr::OriginalName("Exit_Scene_Response")] ExitSceneResponse = 31,
    [pbr::OriginalName("Time_Sync_Request")] TimeSyncRequest = 32,
    [pbr::OriginalName("Time_Sync_Response")] TimeSyncResponse = 33,
    [pbr::OriginalName("Plane_Destroy_Request")] PlaneDestroyRequest = 34,
    [pbr::OriginalName("Plane_Destroy_Response")] PlaneDestroyResponse = 35,
  }

  #endregion

  #region Messages
  /// <summary>
  /// concrete message
  /// </summary>
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      name_ = other.name_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Result = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogoutRequest : pb::IMessage<LogoutRequest> {
    private static readonly pb::MessageParser<LogoutRequest> _parser = new pb::MessageParser<LogoutRequest>(() => new LogoutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest(LogoutRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest Clone() {
      return new LogoutRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogoutResponse : pb::IMessage<LogoutResponse> {
    private static readonly pb::MessageParser<LogoutResponse> _parser = new pb::MessageParser<LogoutResponse>(() => new LogoutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse(LogoutResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse Clone() {
      return new LogoutResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Result = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterResquest : pb::IMessage<RegisterResquest> {
    private static readonly pb::MessageParser<RegisterResquest> _parser = new pb::MessageParser<RegisterResquest>(() => new RegisterResquest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterResquest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResquest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResquest(RegisterResquest other) : this() {
      name_ = other.name_;
      password_ = other.password_;
      email_ = other.email_;
      phone_ = other.phone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResquest Clone() {
      return new RegisterResquest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 4;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterResquest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterResquest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      if (Email != other.Email) return false;
      if (Phone != other.Phone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Phone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterResquest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
          case 34: {
            Phone = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse> {
    private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse(RegisterResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse Clone() {
      return new RegisterResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Result = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageNofification : pb::IMessage<MessageNofification> {
    private static readonly pb::MessageParser<MessageNofification> _parser = new pb::MessageParser<MessageNofification>(() => new MessageNofification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageNofification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageNofification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageNofification(MessageNofification other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageNofification Clone() {
      return new MessageNofification(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageNofification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageNofification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageNofification other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class WelcomeNotification : pb::IMessage<WelcomeNotification> {
    private static readonly pb::MessageParser<WelcomeNotification> _parser = new pb::MessageParser<WelcomeNotification>(() => new WelcomeNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WelcomeNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeNotification(WelcomeNotification other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeNotification Clone() {
      return new WelcomeNotification(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WelcomeNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WelcomeNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WelcomeNotification other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class EchoRequest : pb::IMessage<EchoRequest> {
    private static readonly pb::MessageParser<EchoRequest> _parser = new pb::MessageParser<EchoRequest>(() => new EchoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EchoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoRequest(EchoRequest other) : this() {
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoRequest Clone() {
      return new EchoRequest(this);
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 1;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EchoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EchoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msg.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EchoRequest other) {
      if (other == null) {
        return;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OtherClientNotification : pb::IMessage<OtherClientNotification> {
    private static readonly pb::MessageParser<OtherClientNotification> _parser = new pb::MessageParser<OtherClientNotification>(() => new OtherClientNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherClientNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherClientNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherClientNotification(OtherClientNotification other) : this() {
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherClientNotification Clone() {
      return new OtherClientNotification(this);
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 1;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherClientNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherClientNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msg.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherClientNotification other) {
      if (other == null) {
        return;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CubeOperateRequest : pb::IMessage<CubeOperateRequest> {
    private static readonly pb::MessageParser<CubeOperateRequest> _parser = new pb::MessageParser<CubeOperateRequest>(() => new CubeOperateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CubeOperateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeOperateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeOperateRequest(CubeOperateRequest other) : this() {
      movement_ = other.movement_;
      turn_ = other.turn_;
      id_ = other.id_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      userId_ = other.userId_;
      angle_ = other.angle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeOperateRequest Clone() {
      return new CubeOperateRequest(this);
    }

    /// <summary>Field number for the "movement" field.</summary>
    public const int MovementFieldNumber = 1;
    private float movement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Movement {
      get { return movement_; }
      set {
        movement_ = value;
      }
    }

    /// <summary>Field number for the "turn" field.</summary>
    public const int TurnFieldNumber = 2;
    private float turn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Turn {
      get { return turn_; }
      set {
        turn_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 4;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 5;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 6;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 7;
    private uint userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 8;
    private float angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CubeOperateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CubeOperateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Movement, other.Movement)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Turn, other.Turn)) return false;
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (UserId != other.UserId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Movement != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Movement);
      if (Turn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Turn);
      if (Id != 0) hash ^= Id.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Movement != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Movement);
      }
      if (Turn != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Turn);
      }
      if (Id != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Id);
      }
      if (X != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Z);
      }
      if (UserId != 0) {
        output.WriteRawTag(61);
        output.WriteFixed32(UserId);
      }
      if (Angle != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Movement != 0F) {
        size += 1 + 4;
      }
      if (Turn != 0F) {
        size += 1 + 4;
      }
      if (Id != 0) {
        size += 1 + 4;
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (UserId != 0) {
        size += 1 + 4;
      }
      if (Angle != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CubeOperateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Movement != 0F) {
        Movement = other.Movement;
      }
      if (other.Turn != 0F) {
        Turn = other.Turn;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Angle != 0F) {
        Angle = other.Angle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Movement = input.ReadFloat();
            break;
          }
          case 21: {
            Turn = input.ReadFloat();
            break;
          }
          case 29: {
            Id = input.ReadFixed32();
            break;
          }
          case 37: {
            X = input.ReadFloat();
            break;
          }
          case 45: {
            Y = input.ReadFloat();
            break;
          }
          case 53: {
            Z = input.ReadFloat();
            break;
          }
          case 61: {
            UserId = input.ReadFixed32();
            break;
          }
          case 69: {
            Angle = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CubeOperateResponse : pb::IMessage<CubeOperateResponse> {
    private static readonly pb::MessageParser<CubeOperateResponse> _parser = new pb::MessageParser<CubeOperateResponse>(() => new CubeOperateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CubeOperateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeOperateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeOperateResponse(CubeOperateResponse other) : this() {
      movement_ = other.movement_;
      turn_ = other.turn_;
      id_ = other.id_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      userId_ = other.userId_;
      angle_ = other.angle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeOperateResponse Clone() {
      return new CubeOperateResponse(this);
    }

    /// <summary>Field number for the "movement" field.</summary>
    public const int MovementFieldNumber = 1;
    private float movement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Movement {
      get { return movement_; }
      set {
        movement_ = value;
      }
    }

    /// <summary>Field number for the "turn" field.</summary>
    public const int TurnFieldNumber = 2;
    private float turn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Turn {
      get { return turn_; }
      set {
        turn_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 4;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 5;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 6;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 7;
    private uint userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 8;
    private float angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CubeOperateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CubeOperateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Movement, other.Movement)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Turn, other.Turn)) return false;
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (UserId != other.UserId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Movement != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Movement);
      if (Turn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Turn);
      if (Id != 0) hash ^= Id.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Movement != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Movement);
      }
      if (Turn != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Turn);
      }
      if (Id != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Id);
      }
      if (X != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Z);
      }
      if (UserId != 0) {
        output.WriteRawTag(61);
        output.WriteFixed32(UserId);
      }
      if (Angle != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Movement != 0F) {
        size += 1 + 4;
      }
      if (Turn != 0F) {
        size += 1 + 4;
      }
      if (Id != 0) {
        size += 1 + 4;
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (UserId != 0) {
        size += 1 + 4;
      }
      if (Angle != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CubeOperateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Movement != 0F) {
        Movement = other.Movement;
      }
      if (other.Turn != 0F) {
        Turn = other.Turn;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Angle != 0F) {
        Angle = other.Angle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Movement = input.ReadFloat();
            break;
          }
          case 21: {
            Turn = input.ReadFloat();
            break;
          }
          case 29: {
            Id = input.ReadFixed32();
            break;
          }
          case 37: {
            X = input.ReadFloat();
            break;
          }
          case 45: {
            Y = input.ReadFloat();
            break;
          }
          case 53: {
            Z = input.ReadFloat();
            break;
          }
          case 61: {
            UserId = input.ReadFixed32();
            break;
          }
          case 69: {
            Angle = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CubeCreateResponse : pb::IMessage<CubeCreateResponse> {
    private static readonly pb::MessageParser<CubeCreateResponse> _parser = new pb::MessageParser<CubeCreateResponse>(() => new CubeCreateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CubeCreateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeCreateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeCreateResponse(CubeCreateResponse other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      userId_ = other.userId_;
      id_ = other.id_;
      angle_ = other.angle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeCreateResponse Clone() {
      return new CubeCreateResponse(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private uint userId_;
    /// <summary>
    /// belong to user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private uint id_;
    /// <summary>
    /// unique cube id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 6;
    private float angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CubeCreateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CubeCreateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (UserId != other.UserId) return false;
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (UserId != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(UserId);
      }
      if (Id != 0) {
        output.WriteRawTag(45);
        output.WriteFixed32(Id);
      }
      if (Angle != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (UserId != 0) {
        size += 1 + 4;
      }
      if (Id != 0) {
        size += 1 + 4;
      }
      if (Angle != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CubeCreateResponse other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Angle != 0F) {
        Angle = other.Angle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            UserId = input.ReadFixed32();
            break;
          }
          case 45: {
            Id = input.ReadFixed32();
            break;
          }
          case 53: {
            Angle = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CubeDeleteResponse : pb::IMessage<CubeDeleteResponse> {
    private static readonly pb::MessageParser<CubeDeleteResponse> _parser = new pb::MessageParser<CubeDeleteResponse>(() => new CubeDeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CubeDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeDeleteResponse(CubeDeleteResponse other) : this() {
      id_ = other.id_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeDeleteResponse Clone() {
      return new CubeDeleteResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// unique cube id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private uint userId_;
    /// <summary>
    /// belong to user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CubeDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CubeDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (UserId != 0) {
        output.WriteRawTag(21);
        output.WriteFixed32(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (UserId != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CubeDeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
          case 21: {
            UserId = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SceneChangeCompleteRequest : pb::IMessage<SceneChangeCompleteRequest> {
    private static readonly pb::MessageParser<SceneChangeCompleteRequest> _parser = new pb::MessageParser<SceneChangeCompleteRequest>(() => new SceneChangeCompleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SceneChangeCompleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneChangeCompleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneChangeCompleteRequest(SceneChangeCompleteRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneChangeCompleteRequest Clone() {
      return new SceneChangeCompleteRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SceneChangeCompleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SceneChangeCompleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SceneChangeCompleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SceneChangeCompleteResponse : pb::IMessage<SceneChangeCompleteResponse> {
    private static readonly pb::MessageParser<SceneChangeCompleteResponse> _parser = new pb::MessageParser<SceneChangeCompleteResponse>(() => new SceneChangeCompleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SceneChangeCompleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneChangeCompleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneChangeCompleteResponse(SceneChangeCompleteResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneChangeCompleteResponse Clone() {
      return new SceneChangeCompleteResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SceneChangeCompleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SceneChangeCompleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SceneChangeCompleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchBeginRequest : pb::IMessage<MatchBeginRequest> {
    private static readonly pb::MessageParser<MatchBeginRequest> _parser = new pb::MessageParser<MatchBeginRequest>(() => new MatchBeginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchBeginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchBeginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchBeginRequest(MatchBeginRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchBeginRequest Clone() {
      return new MatchBeginRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchBeginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchBeginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchBeginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchBeginResponse : pb::IMessage<MatchBeginResponse> {
    private static readonly pb::MessageParser<MatchBeginResponse> _parser = new pb::MessageParser<MatchBeginResponse>(() => new MatchBeginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchBeginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchBeginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchBeginResponse(MatchBeginResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchBeginResponse Clone() {
      return new MatchBeginResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchBeginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchBeginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchBeginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchCancelRequest : pb::IMessage<MatchCancelRequest> {
    private static readonly pb::MessageParser<MatchCancelRequest> _parser = new pb::MessageParser<MatchCancelRequest>(() => new MatchCancelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchCancelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCancelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCancelRequest(MatchCancelRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCancelRequest Clone() {
      return new MatchCancelRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchCancelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchCancelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchCancelRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchCancelResponse : pb::IMessage<MatchCancelResponse> {
    private static readonly pb::MessageParser<MatchCancelResponse> _parser = new pb::MessageParser<MatchCancelResponse>(() => new MatchCancelResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchCancelResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCancelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCancelResponse(MatchCancelResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCancelResponse Clone() {
      return new MatchCancelResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchCancelResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchCancelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchCancelResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchCompleteRequest : pb::IMessage<MatchCompleteRequest> {
    private static readonly pb::MessageParser<MatchCompleteRequest> _parser = new pb::MessageParser<MatchCompleteRequest>(() => new MatchCompleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchCompleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCompleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCompleteRequest(MatchCompleteRequest other) : this() {
      id_ = other.id_;
      otherUserId_ = other.otherUserId_;
      userCount_ = other.userCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCompleteRequest Clone() {
      return new MatchCompleteRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "other_user_id" field.</summary>
    public const int OtherUserIdFieldNumber = 2;
    private uint otherUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OtherUserId {
      get { return otherUserId_; }
      set {
        otherUserId_ = value;
      }
    }

    /// <summary>Field number for the "user_count" field.</summary>
    public const int UserCountFieldNumber = 3;
    private uint userCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserCount {
      get { return userCount_; }
      set {
        userCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchCompleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchCompleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OtherUserId != other.OtherUserId) return false;
      if (UserCount != other.UserCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OtherUserId != 0) hash ^= OtherUserId.GetHashCode();
      if (UserCount != 0) hash ^= UserCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (OtherUserId != 0) {
        output.WriteRawTag(21);
        output.WriteFixed32(OtherUserId);
      }
      if (UserCount != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(UserCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (OtherUserId != 0) {
        size += 1 + 4;
      }
      if (UserCount != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchCompleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OtherUserId != 0) {
        OtherUserId = other.OtherUserId;
      }
      if (other.UserCount != 0) {
        UserCount = other.UserCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
          case 21: {
            OtherUserId = input.ReadFixed32();
            break;
          }
          case 29: {
            UserCount = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchCompleteResponse : pb::IMessage<MatchCompleteResponse> {
    private static readonly pb::MessageParser<MatchCompleteResponse> _parser = new pb::MessageParser<MatchCompleteResponse>(() => new MatchCompleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchCompleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCompleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCompleteResponse(MatchCompleteResponse other) : this() {
      id_ = other.id_;
      otherUserId_ = other.otherUserId_;
      userCount_ = other.userCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchCompleteResponse Clone() {
      return new MatchCompleteResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "other_user_id" field.</summary>
    public const int OtherUserIdFieldNumber = 2;
    private uint otherUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OtherUserId {
      get { return otherUserId_; }
      set {
        otherUserId_ = value;
      }
    }

    /// <summary>Field number for the "user_count" field.</summary>
    public const int UserCountFieldNumber = 3;
    private uint userCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserCount {
      get { return userCount_; }
      set {
        userCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchCompleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchCompleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OtherUserId != other.OtherUserId) return false;
      if (UserCount != other.UserCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OtherUserId != 0) hash ^= OtherUserId.GetHashCode();
      if (UserCount != 0) hash ^= UserCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Id);
      }
      if (OtherUserId != 0) {
        output.WriteRawTag(21);
        output.WriteFixed32(OtherUserId);
      }
      if (UserCount != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(UserCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + 4;
      }
      if (OtherUserId != 0) {
        size += 1 + 4;
      }
      if (UserCount != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchCompleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OtherUserId != 0) {
        OtherUserId = other.OtherUserId;
      }
      if (other.UserCount != 0) {
        UserCount = other.UserCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Id = input.ReadFixed32();
            break;
          }
          case 21: {
            OtherUserId = input.ReadFixed32();
            break;
          }
          case 29: {
            UserCount = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlaneOperateRequest : pb::IMessage<PlaneOperateRequest> {
    private static readonly pb::MessageParser<PlaneOperateRequest> _parser = new pb::MessageParser<PlaneOperateRequest>(() => new PlaneOperateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaneOperateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneOperateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneOperateRequest(PlaneOperateRequest other) : this() {
      horizontal_ = other.horizontal_;
      vertical_ = other.vertical_;
      fire_ = other.fire_;
      userId_ = other.userId_;
      indexId_ = other.indexId_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneOperateRequest Clone() {
      return new PlaneOperateRequest(this);
    }

    /// <summary>Field number for the "horizontal" field.</summary>
    public const int HorizontalFieldNumber = 1;
    private float horizontal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Horizontal {
      get { return horizontal_; }
      set {
        horizontal_ = value;
      }
    }

    /// <summary>Field number for the "vertical" field.</summary>
    public const int VerticalFieldNumber = 2;
    private float vertical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Vertical {
      get { return vertical_; }
      set {
        vertical_ = value;
      }
    }

    /// <summary>Field number for the "fire" field.</summary>
    public const int FireFieldNumber = 3;
    private uint fire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Fire {
      get { return fire_; }
      set {
        fire_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private uint userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "index_id" field.</summary>
    public const int IndexIdFieldNumber = 5;
    private uint indexId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IndexId {
      get { return indexId_; }
      set {
        indexId_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 6;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 7;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 8;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaneOperateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaneOperateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Horizontal, other.Horizontal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Vertical, other.Vertical)) return false;
      if (Fire != other.Fire) return false;
      if (UserId != other.UserId) return false;
      if (IndexId != other.IndexId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Horizontal != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Horizontal);
      if (Vertical != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Vertical);
      if (Fire != 0) hash ^= Fire.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (IndexId != 0) hash ^= IndexId.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Horizontal != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Horizontal);
      }
      if (Vertical != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Vertical);
      }
      if (Fire != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Fire);
      }
      if (UserId != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(UserId);
      }
      if (IndexId != 0) {
        output.WriteRawTag(45);
        output.WriteFixed32(IndexId);
      }
      if (X != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Horizontal != 0F) {
        size += 1 + 4;
      }
      if (Vertical != 0F) {
        size += 1 + 4;
      }
      if (Fire != 0) {
        size += 1 + 4;
      }
      if (UserId != 0) {
        size += 1 + 4;
      }
      if (IndexId != 0) {
        size += 1 + 4;
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaneOperateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Horizontal != 0F) {
        Horizontal = other.Horizontal;
      }
      if (other.Vertical != 0F) {
        Vertical = other.Vertical;
      }
      if (other.Fire != 0) {
        Fire = other.Fire;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.IndexId != 0) {
        IndexId = other.IndexId;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Horizontal = input.ReadFloat();
            break;
          }
          case 21: {
            Vertical = input.ReadFloat();
            break;
          }
          case 29: {
            Fire = input.ReadFixed32();
            break;
          }
          case 37: {
            UserId = input.ReadFixed32();
            break;
          }
          case 45: {
            IndexId = input.ReadFixed32();
            break;
          }
          case 53: {
            X = input.ReadFloat();
            break;
          }
          case 61: {
            Y = input.ReadFloat();
            break;
          }
          case 69: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlaneOperateResponse : pb::IMessage<PlaneOperateResponse> {
    private static readonly pb::MessageParser<PlaneOperateResponse> _parser = new pb::MessageParser<PlaneOperateResponse>(() => new PlaneOperateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaneOperateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneOperateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneOperateResponse(PlaneOperateResponse other) : this() {
      horizontal_ = other.horizontal_;
      vertical_ = other.vertical_;
      fire_ = other.fire_;
      userId_ = other.userId_;
      indexId_ = other.indexId_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneOperateResponse Clone() {
      return new PlaneOperateResponse(this);
    }

    /// <summary>Field number for the "horizontal" field.</summary>
    public const int HorizontalFieldNumber = 1;
    private float horizontal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Horizontal {
      get { return horizontal_; }
      set {
        horizontal_ = value;
      }
    }

    /// <summary>Field number for the "vertical" field.</summary>
    public const int VerticalFieldNumber = 2;
    private float vertical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Vertical {
      get { return vertical_; }
      set {
        vertical_ = value;
      }
    }

    /// <summary>Field number for the "fire" field.</summary>
    public const int FireFieldNumber = 3;
    private uint fire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Fire {
      get { return fire_; }
      set {
        fire_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private uint userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "index_id" field.</summary>
    public const int IndexIdFieldNumber = 5;
    private uint indexId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IndexId {
      get { return indexId_; }
      set {
        indexId_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 6;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 7;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 8;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaneOperateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaneOperateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Horizontal, other.Horizontal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Vertical, other.Vertical)) return false;
      if (Fire != other.Fire) return false;
      if (UserId != other.UserId) return false;
      if (IndexId != other.IndexId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Horizontal != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Horizontal);
      if (Vertical != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Vertical);
      if (Fire != 0) hash ^= Fire.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (IndexId != 0) hash ^= IndexId.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Horizontal != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Horizontal);
      }
      if (Vertical != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Vertical);
      }
      if (Fire != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Fire);
      }
      if (UserId != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(UserId);
      }
      if (IndexId != 0) {
        output.WriteRawTag(45);
        output.WriteFixed32(IndexId);
      }
      if (X != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Horizontal != 0F) {
        size += 1 + 4;
      }
      if (Vertical != 0F) {
        size += 1 + 4;
      }
      if (Fire != 0) {
        size += 1 + 4;
      }
      if (UserId != 0) {
        size += 1 + 4;
      }
      if (IndexId != 0) {
        size += 1 + 4;
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaneOperateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Horizontal != 0F) {
        Horizontal = other.Horizontal;
      }
      if (other.Vertical != 0F) {
        Vertical = other.Vertical;
      }
      if (other.Fire != 0) {
        Fire = other.Fire;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.IndexId != 0) {
        IndexId = other.IndexId;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Horizontal = input.ReadFloat();
            break;
          }
          case 21: {
            Vertical = input.ReadFloat();
            break;
          }
          case 29: {
            Fire = input.ReadFixed32();
            break;
          }
          case 37: {
            UserId = input.ReadFixed32();
            break;
          }
          case 45: {
            IndexId = input.ReadFixed32();
            break;
          }
          case 53: {
            X = input.ReadFloat();
            break;
          }
          case 61: {
            Y = input.ReadFloat();
            break;
          }
          case 69: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WaveCreateResponse : pb::IMessage<WaveCreateResponse> {
    private static readonly pb::MessageParser<WaveCreateResponse> _parser = new pb::MessageParser<WaveCreateResponse>(() => new WaveCreateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WaveCreateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WaveCreateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WaveCreateResponse(WaveCreateResponse other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      angel_ = other.angel_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WaveCreateResponse Clone() {
      return new WaveCreateResponse(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "angel" field.</summary>
    public const int AngelFieldNumber = 4;
    private float angel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Angel {
      get { return angel_; }
      set {
        angel_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WaveCreateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WaveCreateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angel, other.Angel)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (Angel != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angel);
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (Angel != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Angel);
      }
      if (Type != 0) {
        output.WriteRawTag(45);
        output.WriteFixed32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (Angel != 0F) {
        size += 1 + 4;
      }
      if (Type != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WaveCreateResponse other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.Angel != 0F) {
        Angel = other.Angel;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            Angel = input.ReadFloat();
            break;
          }
          case 45: {
            Type = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExitSceneRequest : pb::IMessage<ExitSceneRequest> {
    private static readonly pb::MessageParser<ExitSceneRequest> _parser = new pb::MessageParser<ExitSceneRequest>(() => new ExitSceneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitSceneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneRequest(ExitSceneRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneRequest Clone() {
      return new ExitSceneRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitSceneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitSceneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitSceneRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ExitSceneResponse : pb::IMessage<ExitSceneResponse> {
    private static readonly pb::MessageParser<ExitSceneResponse> _parser = new pb::MessageParser<ExitSceneResponse>(() => new ExitSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneResponse(ExitSceneResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneResponse Clone() {
      return new ExitSceneResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitSceneResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class TimeSyncRequest : pb::IMessage<TimeSyncRequest> {
    private static readonly pb::MessageParser<TimeSyncRequest> _parser = new pb::MessageParser<TimeSyncRequest>(() => new TimeSyncRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSyncRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSyncRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSyncRequest(TimeSyncRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSyncRequest Clone() {
      return new TimeSyncRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSyncRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSyncRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSyncRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class TimeSyncResponse : pb::IMessage<TimeSyncResponse> {
    private static readonly pb::MessageParser<TimeSyncResponse> _parser = new pb::MessageParser<TimeSyncResponse>(() => new TimeSyncResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSyncResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSyncResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSyncResponse(TimeSyncResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSyncResponse Clone() {
      return new TimeSyncResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSyncResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSyncResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSyncResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PlaneDestroyRequest : pb::IMessage<PlaneDestroyRequest> {
    private static readonly pb::MessageParser<PlaneDestroyRequest> _parser = new pb::MessageParser<PlaneDestroyRequest>(() => new PlaneDestroyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaneDestroyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneDestroyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneDestroyRequest(PlaneDestroyRequest other) : this() {
      indexId_ = other.indexId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneDestroyRequest Clone() {
      return new PlaneDestroyRequest(this);
    }

    /// <summary>Field number for the "index_id" field.</summary>
    public const int IndexIdFieldNumber = 1;
    private uint indexId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IndexId {
      get { return indexId_; }
      set {
        indexId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaneDestroyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaneDestroyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IndexId != other.IndexId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IndexId != 0) hash ^= IndexId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IndexId != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(IndexId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IndexId != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaneDestroyRequest other) {
      if (other == null) {
        return;
      }
      if (other.IndexId != 0) {
        IndexId = other.IndexId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            IndexId = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlaneDestroyResponse : pb::IMessage<PlaneDestroyResponse> {
    private static readonly pb::MessageParser<PlaneDestroyResponse> _parser = new pb::MessageParser<PlaneDestroyResponse>(() => new PlaneDestroyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaneDestroyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneDestroyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneDestroyResponse(PlaneDestroyResponse other) : this() {
      indexId_ = other.indexId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneDestroyResponse Clone() {
      return new PlaneDestroyResponse(this);
    }

    /// <summary>Field number for the "index_id" field.</summary>
    public const int IndexIdFieldNumber = 1;
    private uint indexId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IndexId {
      get { return indexId_; }
      set {
        indexId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaneDestroyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaneDestroyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IndexId != other.IndexId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IndexId != 0) hash ^= IndexId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IndexId != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(IndexId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IndexId != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaneDestroyResponse other) {
      if (other == null) {
        return;
      }
      if (other.IndexId != 0) {
        IndexId = other.IndexId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            IndexId = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Message Type
  /// </summary>
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      Login = other.login_ != null ? other.Login.Clone() : null;
      Logout = other.logout_ != null ? other.Logout.Clone() : null;
      Register = other.register_ != null ? other.Register.Clone() : null;
      Echo = other.echo_ != null ? other.Echo.Clone() : null;
      CubeOperate = other.cubeOperate_ != null ? other.CubeOperate.Clone() : null;
      SceneChangeComplete = other.sceneChangeComplete_ != null ? other.SceneChangeComplete.Clone() : null;
      MatchBegin = other.matchBegin_ != null ? other.MatchBegin.Clone() : null;
      MatchComplete = other.matchComplete_ != null ? other.MatchComplete.Clone() : null;
      MatchCancel = other.matchCancel_ != null ? other.MatchCancel.Clone() : null;
      PlaneOperate = other.planeOperate_ != null ? other.PlaneOperate.Clone() : null;
      ExitScene = other.exitScene_ != null ? other.ExitScene.Clone() : null;
      TimeSync = other.timeSync_ != null ? other.TimeSync.Clone() : null;
      PlaneDestroy = other.planeDestroy_ != null ? other.PlaneDestroy.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private global::ProtoMsg.LoginRequest login_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.LoginRequest Login {
      get { return login_; }
      set {
        login_ = value;
      }
    }

    /// <summary>Field number for the "logout" field.</summary>
    public const int LogoutFieldNumber = 2;
    private global::ProtoMsg.LogoutRequest logout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.LogoutRequest Logout {
      get { return logout_; }
      set {
        logout_ = value;
      }
    }

    /// <summary>Field number for the "register" field.</summary>
    public const int RegisterFieldNumber = 3;
    private global::ProtoMsg.RegisterResquest register_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.RegisterResquest Register {
      get { return register_; }
      set {
        register_ = value;
      }
    }

    /// <summary>Field number for the "echo" field.</summary>
    public const int EchoFieldNumber = 4;
    private global::ProtoMsg.EchoRequest echo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.EchoRequest Echo {
      get { return echo_; }
      set {
        echo_ = value;
      }
    }

    /// <summary>Field number for the "cube_operate" field.</summary>
    public const int CubeOperateFieldNumber = 5;
    private global::ProtoMsg.CubeOperateRequest cubeOperate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.CubeOperateRequest CubeOperate {
      get { return cubeOperate_; }
      set {
        cubeOperate_ = value;
      }
    }

    /// <summary>Field number for the "scene_change_complete" field.</summary>
    public const int SceneChangeCompleteFieldNumber = 6;
    private global::ProtoMsg.SceneChangeCompleteRequest sceneChangeComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.SceneChangeCompleteRequest SceneChangeComplete {
      get { return sceneChangeComplete_; }
      set {
        sceneChangeComplete_ = value;
      }
    }

    /// <summary>Field number for the "match_begin" field.</summary>
    public const int MatchBeginFieldNumber = 7;
    private global::ProtoMsg.MatchBeginRequest matchBegin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.MatchBeginRequest MatchBegin {
      get { return matchBegin_; }
      set {
        matchBegin_ = value;
      }
    }

    /// <summary>Field number for the "match_complete" field.</summary>
    public const int MatchCompleteFieldNumber = 8;
    private global::ProtoMsg.MatchCompleteRequest matchComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.MatchCompleteRequest MatchComplete {
      get { return matchComplete_; }
      set {
        matchComplete_ = value;
      }
    }

    /// <summary>Field number for the "match_cancel" field.</summary>
    public const int MatchCancelFieldNumber = 9;
    private global::ProtoMsg.MatchCancelRequest matchCancel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.MatchCancelRequest MatchCancel {
      get { return matchCancel_; }
      set {
        matchCancel_ = value;
      }
    }

    /// <summary>Field number for the "plane_operate" field.</summary>
    public const int PlaneOperateFieldNumber = 10;
    private global::ProtoMsg.PlaneOperateRequest planeOperate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.PlaneOperateRequest PlaneOperate {
      get { return planeOperate_; }
      set {
        planeOperate_ = value;
      }
    }

    /// <summary>Field number for the "exit_scene" field.</summary>
    public const int ExitSceneFieldNumber = 11;
    private global::ProtoMsg.ExitSceneRequest exitScene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.ExitSceneRequest ExitScene {
      get { return exitScene_; }
      set {
        exitScene_ = value;
      }
    }

    /// <summary>Field number for the "time_sync" field.</summary>
    public const int TimeSyncFieldNumber = 12;
    private global::ProtoMsg.TimeSyncRequest timeSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.TimeSyncRequest TimeSync {
      get { return timeSync_; }
      set {
        timeSync_ = value;
      }
    }

    /// <summary>Field number for the "plane_destroy" field.</summary>
    public const int PlaneDestroyFieldNumber = 13;
    private global::ProtoMsg.PlaneDestroyRequest planeDestroy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.PlaneDestroyRequest PlaneDestroy {
      get { return planeDestroy_; }
      set {
        planeDestroy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Login, other.Login)) return false;
      if (!object.Equals(Logout, other.Logout)) return false;
      if (!object.Equals(Register, other.Register)) return false;
      if (!object.Equals(Echo, other.Echo)) return false;
      if (!object.Equals(CubeOperate, other.CubeOperate)) return false;
      if (!object.Equals(SceneChangeComplete, other.SceneChangeComplete)) return false;
      if (!object.Equals(MatchBegin, other.MatchBegin)) return false;
      if (!object.Equals(MatchComplete, other.MatchComplete)) return false;
      if (!object.Equals(MatchCancel, other.MatchCancel)) return false;
      if (!object.Equals(PlaneOperate, other.PlaneOperate)) return false;
      if (!object.Equals(ExitScene, other.ExitScene)) return false;
      if (!object.Equals(TimeSync, other.TimeSync)) return false;
      if (!object.Equals(PlaneDestroy, other.PlaneDestroy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (login_ != null) hash ^= Login.GetHashCode();
      if (logout_ != null) hash ^= Logout.GetHashCode();
      if (register_ != null) hash ^= Register.GetHashCode();
      if (echo_ != null) hash ^= Echo.GetHashCode();
      if (cubeOperate_ != null) hash ^= CubeOperate.GetHashCode();
      if (sceneChangeComplete_ != null) hash ^= SceneChangeComplete.GetHashCode();
      if (matchBegin_ != null) hash ^= MatchBegin.GetHashCode();
      if (matchComplete_ != null) hash ^= MatchComplete.GetHashCode();
      if (matchCancel_ != null) hash ^= MatchCancel.GetHashCode();
      if (planeOperate_ != null) hash ^= PlaneOperate.GetHashCode();
      if (exitScene_ != null) hash ^= ExitScene.GetHashCode();
      if (timeSync_ != null) hash ^= TimeSync.GetHashCode();
      if (planeDestroy_ != null) hash ^= PlaneDestroy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (login_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Login);
      }
      if (logout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Logout);
      }
      if (register_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Register);
      }
      if (echo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Echo);
      }
      if (cubeOperate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CubeOperate);
      }
      if (sceneChangeComplete_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SceneChangeComplete);
      }
      if (matchBegin_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(MatchBegin);
      }
      if (matchComplete_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MatchComplete);
      }
      if (matchCancel_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MatchCancel);
      }
      if (planeOperate_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PlaneOperate);
      }
      if (exitScene_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ExitScene);
      }
      if (timeSync_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TimeSync);
      }
      if (planeDestroy_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PlaneDestroy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (login_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Login);
      }
      if (logout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Logout);
      }
      if (register_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Register);
      }
      if (echo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Echo);
      }
      if (cubeOperate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CubeOperate);
      }
      if (sceneChangeComplete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneChangeComplete);
      }
      if (matchBegin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchBegin);
      }
      if (matchComplete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchComplete);
      }
      if (matchCancel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchCancel);
      }
      if (planeOperate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaneOperate);
      }
      if (exitScene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExitScene);
      }
      if (timeSync_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeSync);
      }
      if (planeDestroy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaneDestroy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.login_ != null) {
        if (login_ == null) {
          login_ = new global::ProtoMsg.LoginRequest();
        }
        Login.MergeFrom(other.Login);
      }
      if (other.logout_ != null) {
        if (logout_ == null) {
          logout_ = new global::ProtoMsg.LogoutRequest();
        }
        Logout.MergeFrom(other.Logout);
      }
      if (other.register_ != null) {
        if (register_ == null) {
          register_ = new global::ProtoMsg.RegisterResquest();
        }
        Register.MergeFrom(other.Register);
      }
      if (other.echo_ != null) {
        if (echo_ == null) {
          echo_ = new global::ProtoMsg.EchoRequest();
        }
        Echo.MergeFrom(other.Echo);
      }
      if (other.cubeOperate_ != null) {
        if (cubeOperate_ == null) {
          cubeOperate_ = new global::ProtoMsg.CubeOperateRequest();
        }
        CubeOperate.MergeFrom(other.CubeOperate);
      }
      if (other.sceneChangeComplete_ != null) {
        if (sceneChangeComplete_ == null) {
          sceneChangeComplete_ = new global::ProtoMsg.SceneChangeCompleteRequest();
        }
        SceneChangeComplete.MergeFrom(other.SceneChangeComplete);
      }
      if (other.matchBegin_ != null) {
        if (matchBegin_ == null) {
          matchBegin_ = new global::ProtoMsg.MatchBeginRequest();
        }
        MatchBegin.MergeFrom(other.MatchBegin);
      }
      if (other.matchComplete_ != null) {
        if (matchComplete_ == null) {
          matchComplete_ = new global::ProtoMsg.MatchCompleteRequest();
        }
        MatchComplete.MergeFrom(other.MatchComplete);
      }
      if (other.matchCancel_ != null) {
        if (matchCancel_ == null) {
          matchCancel_ = new global::ProtoMsg.MatchCancelRequest();
        }
        MatchCancel.MergeFrom(other.MatchCancel);
      }
      if (other.planeOperate_ != null) {
        if (planeOperate_ == null) {
          planeOperate_ = new global::ProtoMsg.PlaneOperateRequest();
        }
        PlaneOperate.MergeFrom(other.PlaneOperate);
      }
      if (other.exitScene_ != null) {
        if (exitScene_ == null) {
          exitScene_ = new global::ProtoMsg.ExitSceneRequest();
        }
        ExitScene.MergeFrom(other.ExitScene);
      }
      if (other.timeSync_ != null) {
        if (timeSync_ == null) {
          timeSync_ = new global::ProtoMsg.TimeSyncRequest();
        }
        TimeSync.MergeFrom(other.TimeSync);
      }
      if (other.planeDestroy_ != null) {
        if (planeDestroy_ == null) {
          planeDestroy_ = new global::ProtoMsg.PlaneDestroyRequest();
        }
        PlaneDestroy.MergeFrom(other.PlaneDestroy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (login_ == null) {
              login_ = new global::ProtoMsg.LoginRequest();
            }
            input.ReadMessage(login_);
            break;
          }
          case 18: {
            if (logout_ == null) {
              logout_ = new global::ProtoMsg.LogoutRequest();
            }
            input.ReadMessage(logout_);
            break;
          }
          case 26: {
            if (register_ == null) {
              register_ = new global::ProtoMsg.RegisterResquest();
            }
            input.ReadMessage(register_);
            break;
          }
          case 34: {
            if (echo_ == null) {
              echo_ = new global::ProtoMsg.EchoRequest();
            }
            input.ReadMessage(echo_);
            break;
          }
          case 42: {
            if (cubeOperate_ == null) {
              cubeOperate_ = new global::ProtoMsg.CubeOperateRequest();
            }
            input.ReadMessage(cubeOperate_);
            break;
          }
          case 50: {
            if (sceneChangeComplete_ == null) {
              sceneChangeComplete_ = new global::ProtoMsg.SceneChangeCompleteRequest();
            }
            input.ReadMessage(sceneChangeComplete_);
            break;
          }
          case 58: {
            if (matchBegin_ == null) {
              matchBegin_ = new global::ProtoMsg.MatchBeginRequest();
            }
            input.ReadMessage(matchBegin_);
            break;
          }
          case 66: {
            if (matchComplete_ == null) {
              matchComplete_ = new global::ProtoMsg.MatchCompleteRequest();
            }
            input.ReadMessage(matchComplete_);
            break;
          }
          case 74: {
            if (matchCancel_ == null) {
              matchCancel_ = new global::ProtoMsg.MatchCancelRequest();
            }
            input.ReadMessage(matchCancel_);
            break;
          }
          case 82: {
            if (planeOperate_ == null) {
              planeOperate_ = new global::ProtoMsg.PlaneOperateRequest();
            }
            input.ReadMessage(planeOperate_);
            break;
          }
          case 90: {
            if (exitScene_ == null) {
              exitScene_ = new global::ProtoMsg.ExitSceneRequest();
            }
            input.ReadMessage(exitScene_);
            break;
          }
          case 98: {
            if (timeSync_ == null) {
              timeSync_ = new global::ProtoMsg.TimeSyncRequest();
            }
            input.ReadMessage(timeSync_);
            break;
          }
          case 106: {
            if (planeDestroy_ == null) {
              planeDestroy_ = new global::ProtoMsg.PlaneDestroyRequest();
            }
            input.ReadMessage(planeDestroy_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      Login = other.login_ != null ? other.Login.Clone() : null;
      Logout = other.logout_ != null ? other.Logout.Clone() : null;
      Register = other.register_ != null ? other.Register.Clone() : null;
      CubeOperate = other.cubeOperate_ != null ? other.CubeOperate.Clone() : null;
      SceneChangeComplete = other.sceneChangeComplete_ != null ? other.SceneChangeComplete.Clone() : null;
      CubeCreateResponse = other.cubeCreateResponse_ != null ? other.CubeCreateResponse.Clone() : null;
      CubeDeleteResponse = other.cubeDeleteResponse_ != null ? other.CubeDeleteResponse.Clone() : null;
      MatchBegin = other.matchBegin_ != null ? other.MatchBegin.Clone() : null;
      MatchComplete = other.matchComplete_ != null ? other.MatchComplete.Clone() : null;
      MatchCancel = other.matchCancel_ != null ? other.MatchCancel.Clone() : null;
      PlaneOperate = other.planeOperate_ != null ? other.PlaneOperate.Clone() : null;
      WaveCreate = other.waveCreate_ != null ? other.WaveCreate.Clone() : null;
      ExitScene = other.exitScene_ != null ? other.ExitScene.Clone() : null;
      TimeSync = other.timeSync_ != null ? other.TimeSync.Clone() : null;
      PlaneDestroy = other.planeDestroy_ != null ? other.PlaneDestroy.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private global::ProtoMsg.LoginResponse login_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.LoginResponse Login {
      get { return login_; }
      set {
        login_ = value;
      }
    }

    /// <summary>Field number for the "logout" field.</summary>
    public const int LogoutFieldNumber = 2;
    private global::ProtoMsg.LogoutResponse logout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.LogoutResponse Logout {
      get { return logout_; }
      set {
        logout_ = value;
      }
    }

    /// <summary>Field number for the "register" field.</summary>
    public const int RegisterFieldNumber = 3;
    private global::ProtoMsg.RegisterResponse register_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.RegisterResponse Register {
      get { return register_; }
      set {
        register_ = value;
      }
    }

    /// <summary>Field number for the "cube_operate" field.</summary>
    public const int CubeOperateFieldNumber = 4;
    private global::ProtoMsg.CubeOperateResponse cubeOperate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.CubeOperateResponse CubeOperate {
      get { return cubeOperate_; }
      set {
        cubeOperate_ = value;
      }
    }

    /// <summary>Field number for the "scene_change_complete" field.</summary>
    public const int SceneChangeCompleteFieldNumber = 5;
    private global::ProtoMsg.SceneChangeCompleteResponse sceneChangeComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.SceneChangeCompleteResponse SceneChangeComplete {
      get { return sceneChangeComplete_; }
      set {
        sceneChangeComplete_ = value;
      }
    }

    /// <summary>Field number for the "cube_create_response" field.</summary>
    public const int CubeCreateResponseFieldNumber = 6;
    private global::ProtoMsg.CubeCreateResponse cubeCreateResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.CubeCreateResponse CubeCreateResponse {
      get { return cubeCreateResponse_; }
      set {
        cubeCreateResponse_ = value;
      }
    }

    /// <summary>Field number for the "cube_delete_Response" field.</summary>
    public const int CubeDeleteResponseFieldNumber = 7;
    private global::ProtoMsg.CubeDeleteResponse cubeDeleteResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.CubeDeleteResponse CubeDeleteResponse {
      get { return cubeDeleteResponse_; }
      set {
        cubeDeleteResponse_ = value;
      }
    }

    /// <summary>Field number for the "match_begin" field.</summary>
    public const int MatchBeginFieldNumber = 8;
    private global::ProtoMsg.MatchBeginResponse matchBegin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.MatchBeginResponse MatchBegin {
      get { return matchBegin_; }
      set {
        matchBegin_ = value;
      }
    }

    /// <summary>Field number for the "match_complete" field.</summary>
    public const int MatchCompleteFieldNumber = 9;
    private global::ProtoMsg.MatchCompleteResponse matchComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.MatchCompleteResponse MatchComplete {
      get { return matchComplete_; }
      set {
        matchComplete_ = value;
      }
    }

    /// <summary>Field number for the "match_cancel" field.</summary>
    public const int MatchCancelFieldNumber = 10;
    private global::ProtoMsg.MatchCancelResponse matchCancel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.MatchCancelResponse MatchCancel {
      get { return matchCancel_; }
      set {
        matchCancel_ = value;
      }
    }

    /// <summary>Field number for the "plane_operate" field.</summary>
    public const int PlaneOperateFieldNumber = 11;
    private global::ProtoMsg.PlaneOperateResponse planeOperate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.PlaneOperateResponse PlaneOperate {
      get { return planeOperate_; }
      set {
        planeOperate_ = value;
      }
    }

    /// <summary>Field number for the "wave_create" field.</summary>
    public const int WaveCreateFieldNumber = 12;
    private global::ProtoMsg.WaveCreateResponse waveCreate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.WaveCreateResponse WaveCreate {
      get { return waveCreate_; }
      set {
        waveCreate_ = value;
      }
    }

    /// <summary>Field number for the "exit_scene" field.</summary>
    public const int ExitSceneFieldNumber = 13;
    private global::ProtoMsg.ExitSceneResponse exitScene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.ExitSceneResponse ExitScene {
      get { return exitScene_; }
      set {
        exitScene_ = value;
      }
    }

    /// <summary>Field number for the "time_sync" field.</summary>
    public const int TimeSyncFieldNumber = 14;
    private global::ProtoMsg.TimeSyncResponse timeSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.TimeSyncResponse TimeSync {
      get { return timeSync_; }
      set {
        timeSync_ = value;
      }
    }

    /// <summary>Field number for the "plane_destroy" field.</summary>
    public const int PlaneDestroyFieldNumber = 15;
    private global::ProtoMsg.PlaneDestroyResponse planeDestroy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.PlaneDestroyResponse PlaneDestroy {
      get { return planeDestroy_; }
      set {
        planeDestroy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Login, other.Login)) return false;
      if (!object.Equals(Logout, other.Logout)) return false;
      if (!object.Equals(Register, other.Register)) return false;
      if (!object.Equals(CubeOperate, other.CubeOperate)) return false;
      if (!object.Equals(SceneChangeComplete, other.SceneChangeComplete)) return false;
      if (!object.Equals(CubeCreateResponse, other.CubeCreateResponse)) return false;
      if (!object.Equals(CubeDeleteResponse, other.CubeDeleteResponse)) return false;
      if (!object.Equals(MatchBegin, other.MatchBegin)) return false;
      if (!object.Equals(MatchComplete, other.MatchComplete)) return false;
      if (!object.Equals(MatchCancel, other.MatchCancel)) return false;
      if (!object.Equals(PlaneOperate, other.PlaneOperate)) return false;
      if (!object.Equals(WaveCreate, other.WaveCreate)) return false;
      if (!object.Equals(ExitScene, other.ExitScene)) return false;
      if (!object.Equals(TimeSync, other.TimeSync)) return false;
      if (!object.Equals(PlaneDestroy, other.PlaneDestroy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (login_ != null) hash ^= Login.GetHashCode();
      if (logout_ != null) hash ^= Logout.GetHashCode();
      if (register_ != null) hash ^= Register.GetHashCode();
      if (cubeOperate_ != null) hash ^= CubeOperate.GetHashCode();
      if (sceneChangeComplete_ != null) hash ^= SceneChangeComplete.GetHashCode();
      if (cubeCreateResponse_ != null) hash ^= CubeCreateResponse.GetHashCode();
      if (cubeDeleteResponse_ != null) hash ^= CubeDeleteResponse.GetHashCode();
      if (matchBegin_ != null) hash ^= MatchBegin.GetHashCode();
      if (matchComplete_ != null) hash ^= MatchComplete.GetHashCode();
      if (matchCancel_ != null) hash ^= MatchCancel.GetHashCode();
      if (planeOperate_ != null) hash ^= PlaneOperate.GetHashCode();
      if (waveCreate_ != null) hash ^= WaveCreate.GetHashCode();
      if (exitScene_ != null) hash ^= ExitScene.GetHashCode();
      if (timeSync_ != null) hash ^= TimeSync.GetHashCode();
      if (planeDestroy_ != null) hash ^= PlaneDestroy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (login_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Login);
      }
      if (logout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Logout);
      }
      if (register_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Register);
      }
      if (cubeOperate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CubeOperate);
      }
      if (sceneChangeComplete_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SceneChangeComplete);
      }
      if (cubeCreateResponse_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CubeCreateResponse);
      }
      if (cubeDeleteResponse_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CubeDeleteResponse);
      }
      if (matchBegin_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MatchBegin);
      }
      if (matchComplete_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MatchComplete);
      }
      if (matchCancel_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(MatchCancel);
      }
      if (planeOperate_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PlaneOperate);
      }
      if (waveCreate_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(WaveCreate);
      }
      if (exitScene_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ExitScene);
      }
      if (timeSync_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(TimeSync);
      }
      if (planeDestroy_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(PlaneDestroy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (login_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Login);
      }
      if (logout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Logout);
      }
      if (register_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Register);
      }
      if (cubeOperate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CubeOperate);
      }
      if (sceneChangeComplete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneChangeComplete);
      }
      if (cubeCreateResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CubeCreateResponse);
      }
      if (cubeDeleteResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CubeDeleteResponse);
      }
      if (matchBegin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchBegin);
      }
      if (matchComplete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchComplete);
      }
      if (matchCancel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchCancel);
      }
      if (planeOperate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaneOperate);
      }
      if (waveCreate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WaveCreate);
      }
      if (exitScene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExitScene);
      }
      if (timeSync_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeSync);
      }
      if (planeDestroy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaneDestroy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.login_ != null) {
        if (login_ == null) {
          login_ = new global::ProtoMsg.LoginResponse();
        }
        Login.MergeFrom(other.Login);
      }
      if (other.logout_ != null) {
        if (logout_ == null) {
          logout_ = new global::ProtoMsg.LogoutResponse();
        }
        Logout.MergeFrom(other.Logout);
      }
      if (other.register_ != null) {
        if (register_ == null) {
          register_ = new global::ProtoMsg.RegisterResponse();
        }
        Register.MergeFrom(other.Register);
      }
      if (other.cubeOperate_ != null) {
        if (cubeOperate_ == null) {
          cubeOperate_ = new global::ProtoMsg.CubeOperateResponse();
        }
        CubeOperate.MergeFrom(other.CubeOperate);
      }
      if (other.sceneChangeComplete_ != null) {
        if (sceneChangeComplete_ == null) {
          sceneChangeComplete_ = new global::ProtoMsg.SceneChangeCompleteResponse();
        }
        SceneChangeComplete.MergeFrom(other.SceneChangeComplete);
      }
      if (other.cubeCreateResponse_ != null) {
        if (cubeCreateResponse_ == null) {
          cubeCreateResponse_ = new global::ProtoMsg.CubeCreateResponse();
        }
        CubeCreateResponse.MergeFrom(other.CubeCreateResponse);
      }
      if (other.cubeDeleteResponse_ != null) {
        if (cubeDeleteResponse_ == null) {
          cubeDeleteResponse_ = new global::ProtoMsg.CubeDeleteResponse();
        }
        CubeDeleteResponse.MergeFrom(other.CubeDeleteResponse);
      }
      if (other.matchBegin_ != null) {
        if (matchBegin_ == null) {
          matchBegin_ = new global::ProtoMsg.MatchBeginResponse();
        }
        MatchBegin.MergeFrom(other.MatchBegin);
      }
      if (other.matchComplete_ != null) {
        if (matchComplete_ == null) {
          matchComplete_ = new global::ProtoMsg.MatchCompleteResponse();
        }
        MatchComplete.MergeFrom(other.MatchComplete);
      }
      if (other.matchCancel_ != null) {
        if (matchCancel_ == null) {
          matchCancel_ = new global::ProtoMsg.MatchCancelResponse();
        }
        MatchCancel.MergeFrom(other.MatchCancel);
      }
      if (other.planeOperate_ != null) {
        if (planeOperate_ == null) {
          planeOperate_ = new global::ProtoMsg.PlaneOperateResponse();
        }
        PlaneOperate.MergeFrom(other.PlaneOperate);
      }
      if (other.waveCreate_ != null) {
        if (waveCreate_ == null) {
          waveCreate_ = new global::ProtoMsg.WaveCreateResponse();
        }
        WaveCreate.MergeFrom(other.WaveCreate);
      }
      if (other.exitScene_ != null) {
        if (exitScene_ == null) {
          exitScene_ = new global::ProtoMsg.ExitSceneResponse();
        }
        ExitScene.MergeFrom(other.ExitScene);
      }
      if (other.timeSync_ != null) {
        if (timeSync_ == null) {
          timeSync_ = new global::ProtoMsg.TimeSyncResponse();
        }
        TimeSync.MergeFrom(other.TimeSync);
      }
      if (other.planeDestroy_ != null) {
        if (planeDestroy_ == null) {
          planeDestroy_ = new global::ProtoMsg.PlaneDestroyResponse();
        }
        PlaneDestroy.MergeFrom(other.PlaneDestroy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (login_ == null) {
              login_ = new global::ProtoMsg.LoginResponse();
            }
            input.ReadMessage(login_);
            break;
          }
          case 18: {
            if (logout_ == null) {
              logout_ = new global::ProtoMsg.LogoutResponse();
            }
            input.ReadMessage(logout_);
            break;
          }
          case 26: {
            if (register_ == null) {
              register_ = new global::ProtoMsg.RegisterResponse();
            }
            input.ReadMessage(register_);
            break;
          }
          case 34: {
            if (cubeOperate_ == null) {
              cubeOperate_ = new global::ProtoMsg.CubeOperateResponse();
            }
            input.ReadMessage(cubeOperate_);
            break;
          }
          case 42: {
            if (sceneChangeComplete_ == null) {
              sceneChangeComplete_ = new global::ProtoMsg.SceneChangeCompleteResponse();
            }
            input.ReadMessage(sceneChangeComplete_);
            break;
          }
          case 50: {
            if (cubeCreateResponse_ == null) {
              cubeCreateResponse_ = new global::ProtoMsg.CubeCreateResponse();
            }
            input.ReadMessage(cubeCreateResponse_);
            break;
          }
          case 58: {
            if (cubeDeleteResponse_ == null) {
              cubeDeleteResponse_ = new global::ProtoMsg.CubeDeleteResponse();
            }
            input.ReadMessage(cubeDeleteResponse_);
            break;
          }
          case 66: {
            if (matchBegin_ == null) {
              matchBegin_ = new global::ProtoMsg.MatchBeginResponse();
            }
            input.ReadMessage(matchBegin_);
            break;
          }
          case 74: {
            if (matchComplete_ == null) {
              matchComplete_ = new global::ProtoMsg.MatchCompleteResponse();
            }
            input.ReadMessage(matchComplete_);
            break;
          }
          case 82: {
            if (matchCancel_ == null) {
              matchCancel_ = new global::ProtoMsg.MatchCancelResponse();
            }
            input.ReadMessage(matchCancel_);
            break;
          }
          case 90: {
            if (planeOperate_ == null) {
              planeOperate_ = new global::ProtoMsg.PlaneOperateResponse();
            }
            input.ReadMessage(planeOperate_);
            break;
          }
          case 98: {
            if (waveCreate_ == null) {
              waveCreate_ = new global::ProtoMsg.WaveCreateResponse();
            }
            input.ReadMessage(waveCreate_);
            break;
          }
          case 106: {
            if (exitScene_ == null) {
              exitScene_ = new global::ProtoMsg.ExitSceneResponse();
            }
            input.ReadMessage(exitScene_);
            break;
          }
          case 114: {
            if (timeSync_ == null) {
              timeSync_ = new global::ProtoMsg.TimeSyncResponse();
            }
            input.ReadMessage(timeSync_);
            break;
          }
          case 122: {
            if (planeDestroy_ == null) {
              planeDestroy_ = new global::ProtoMsg.PlaneDestroyResponse();
            }
            input.ReadMessage(planeDestroy_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Notification : pb::IMessage<Notification> {
    private static readonly pb::MessageParser<Notification> _parser = new pb::MessageParser<Notification>(() => new Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification(Notification other) : this() {
      Message = other.message_ != null ? other.Message.Clone() : null;
      Welcome = other.welcome_ != null ? other.Welcome.Clone() : null;
      OtherClient = other.otherClient_ != null ? other.OtherClient.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification Clone() {
      return new Notification(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::ProtoMsg.MessageNofification message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.MessageNofification Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "welcome" field.</summary>
    public const int WelcomeFieldNumber = 2;
    private global::ProtoMsg.WelcomeNotification welcome_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.WelcomeNotification Welcome {
      get { return welcome_; }
      set {
        welcome_ = value;
      }
    }

    /// <summary>Field number for the "other_client" field.</summary>
    public const int OtherClientFieldNumber = 3;
    private global::ProtoMsg.OtherClientNotification otherClient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.OtherClientNotification OtherClient {
      get { return otherClient_; }
      set {
        otherClient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(Welcome, other.Welcome)) return false;
      if (!object.Equals(OtherClient, other.OtherClient)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (message_ != null) hash ^= Message.GetHashCode();
      if (welcome_ != null) hash ^= Welcome.GetHashCode();
      if (otherClient_ != null) hash ^= OtherClient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (message_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (welcome_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Welcome);
      }
      if (otherClient_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OtherClient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (welcome_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Welcome);
      }
      if (otherClient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherClient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notification other) {
      if (other == null) {
        return;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          message_ = new global::ProtoMsg.MessageNofification();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.welcome_ != null) {
        if (welcome_ == null) {
          welcome_ = new global::ProtoMsg.WelcomeNotification();
        }
        Welcome.MergeFrom(other.Welcome);
      }
      if (other.otherClient_ != null) {
        if (otherClient_ == null) {
          otherClient_ = new global::ProtoMsg.OtherClientNotification();
        }
        OtherClient.MergeFrom(other.OtherClient);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (message_ == null) {
              message_ = new global::ProtoMsg.MessageNofification();
            }
            input.ReadMessage(message_);
            break;
          }
          case 18: {
            if (welcome_ == null) {
              welcome_ = new global::ProtoMsg.WelcomeNotification();
            }
            input.ReadMessage(welcome_);
            break;
          }
          case 26: {
            if (otherClient_ == null) {
              otherClient_ = new global::ProtoMsg.OtherClientNotification();
            }
            input.ReadMessage(otherClient_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Base Message
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.MessageReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      msgType_ = other.msgType_;
      userid_ = other.userid_;
      sequence_ = other.sequence_;
      sessionId_ = other.sessionId_;
      timestampMs_ = other.timestampMs_;
      Request = other.request_ != null ? other.Request.Clone() : null;
      Response = other.response_ != null ? other.Response.Clone() : null;
      Notification = other.notification_ != null ? other.Notification.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "msg_type" field.</summary>
    public const int MsgTypeFieldNumber = 1;
    private global::ProtoMsg.MSG msgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.MSG MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private uint userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private uint sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 4;
    private uint sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 5;
    private long timestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 6;
    private global::ProtoMsg.Request request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.Request Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 7;
    private global::ProtoMsg.Response response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.Response Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "notification" field.</summary>
    public const int NotificationFieldNumber = 8;
    private global::ProtoMsg.Notification notification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.Notification Notification {
      get { return notification_; }
      set {
        notification_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (Userid != other.Userid) return false;
      if (Sequence != other.Sequence) return false;
      if (SessionId != other.SessionId) return false;
      if (TimestampMs != other.TimestampMs) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (!object.Equals(Notification, other.Notification)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (Sequence != 0) hash ^= Sequence.GetHashCode();
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (TimestampMs != 0L) hash ^= TimestampMs.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (notification_ != null) hash ^= Notification.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgType);
      }
      if (Userid != 0) {
        output.WriteRawTag(21);
        output.WriteFixed32(Userid);
      }
      if (Sequence != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Sequence);
      }
      if (SessionId != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(SessionId);
      }
      if (TimestampMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TimestampMs);
      }
      if (request_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Response);
      }
      if (notification_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Notification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (Userid != 0) {
        size += 1 + 4;
      }
      if (Sequence != 0) {
        size += 1 + 4;
      }
      if (SessionId != 0) {
        size += 1 + 4;
      }
      if (TimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMs);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (notification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Notification);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      if (other.Sequence != 0) {
        Sequence = other.Sequence;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.TimestampMs != 0L) {
        TimestampMs = other.TimestampMs;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          request_ = new global::ProtoMsg.Request();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.response_ != null) {
        if (response_ == null) {
          response_ = new global::ProtoMsg.Response();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.notification_ != null) {
        if (notification_ == null) {
          notification_ = new global::ProtoMsg.Notification();
        }
        Notification.MergeFrom(other.Notification);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgType_ = (global::ProtoMsg.MSG) input.ReadEnum();
            break;
          }
          case 21: {
            Userid = input.ReadFixed32();
            break;
          }
          case 29: {
            Sequence = input.ReadFixed32();
            break;
          }
          case 37: {
            SessionId = input.ReadFixed32();
            break;
          }
          case 40: {
            TimestampMs = input.ReadInt64();
            break;
          }
          case 50: {
            if (request_ == null) {
              request_ = new global::ProtoMsg.Request();
            }
            input.ReadMessage(request_);
            break;
          }
          case 58: {
            if (response_ == null) {
              response_ = new global::ProtoMsg.Response();
            }
            input.ReadMessage(response_);
            break;
          }
          case 66: {
            if (notification_ == null) {
              notification_ = new global::ProtoMsg.Notification();
            }
            input.ReadMessage(notification_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
